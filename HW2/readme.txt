---Data Mining Homework #2---

This is the submission of Srividhya Chandrasekharan.

	Files submitted are the python source file to implement kNN algo, testing & training datasets used, bashscript, code to generate ROC curve, code implementing scikit-learn's kNN classifier whose results were used for Section 3 and a readme.txt.

	Source file:- knn.py : It takes 2 command line arguments, namely, the input .csv filename and k(number of neighbours).
			 Sample commands to run the source file is: 
			> python knn.py Iris.csv 5
			> python knn.py Income.csv 7

	P.S:- knn.py has a variable named 'choice' in it's main function. When choice is set to 1, EUCLIDEAN distance is used as similarity metric and when choice=2, cosine similarity is used. By default, choice is set to 1.

	Note:- knn.py saves the output in a .csv file named knn.csv which is generated from an intermediate file output.csv that's generated by the code.

	Training DataSets used - Iris.csv and Income.csv 
	
	Testing DataSets used - Iris_Test.csv and Income_Test.csv

	To run the code that generates ROC curve:-
		The code roc_curve_test.py takes 1 command line argument which is the value of k. This code operates on the output.csv file that is generated by the most recent run of the knn.py program.
		Sample command to generate ROC curve are: 
		> python roc_curve_test.py 5
		> python roc_curve_test.py 15

	To run the code that implements scikit-learn's KNN classifier:-
		off_the_shelf_knn.py takes 2 command line arguments, namely, the input .csv filename and k(number of neighbours) 
		 > python off_the_shelf_knn.py Iris.csv 5
		 > python off_the_shelf_knn.py Income.csv 7










